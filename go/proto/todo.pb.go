// Code generated by protoc-gen-go.
// source: todo.proto
// DO NOT EDIT!

/*
Package todo is a generated protocol buffer package.

It is generated from these files:
	todo.proto

It has these top-level messages:
	Void
	Task
	Tasks
*/
package todo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Void struct {
}

func (m *Void) Reset()                    { *m = Void{} }
func (m *Void) String() string            { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()               {}
func (*Void) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Task struct {
	Title       string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Tasks struct {
	Tasks []*Task `protobuf:"bytes,1,rep,name=tasks" json:"tasks,omitempty"`
}

func (m *Tasks) Reset()                    { *m = Tasks{} }
func (m *Tasks) String() string            { return proto.CompactTextString(m) }
func (*Tasks) ProtoMessage()               {}
func (*Tasks) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Tasks) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func init() {
	proto.RegisterType((*Void)(nil), "Void")
	proto.RegisterType((*Task)(nil), "Task")
	proto.RegisterType((*Tasks)(nil), "Tasks")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Todo service

type TodoClient interface {
	AddTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*Task, error)
	ListTasks(ctx context.Context, in *Void, opts ...grpc.CallOption) (*Tasks, error)
}

type todoClient struct {
	cc *grpc.ClientConn
}

func NewTodoClient(cc *grpc.ClientConn) TodoClient {
	return &todoClient{cc}
}

func (c *todoClient) AddTask(ctx context.Context, in *Task, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := grpc.Invoke(ctx, "/Todo/AddTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) ListTasks(ctx context.Context, in *Void, opts ...grpc.CallOption) (*Tasks, error) {
	out := new(Tasks)
	err := grpc.Invoke(ctx, "/Todo/ListTasks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Todo service

type TodoServer interface {
	AddTask(context.Context, *Task) (*Task, error)
	ListTasks(context.Context, *Void) (*Tasks, error)
}

func RegisterTodoServer(s *grpc.Server, srv TodoServer) {
	s.RegisterService(&_Todo_serviceDesc, srv)
}

func _Todo_AddTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Task)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(TodoServer).AddTask(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Todo_ListTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(TodoServer).ListTasks(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Todo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Todo",
	HandlerType: (*TodoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTask",
			Handler:    _Todo_AddTask_Handler,
		},
		{
			MethodName: "ListTasks",
			Handler:    _Todo_ListTasks_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xc9, 0x4f, 0xc9,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x62, 0xe3, 0x62, 0x09, 0xcb, 0xcf, 0x4c, 0x51, 0xb2,
	0xe3, 0x62, 0x09, 0x49, 0x2c, 0xce, 0x16, 0x12, 0xe1, 0x62, 0x2d, 0xc9, 0x2c, 0xc9, 0x49, 0x95,
	0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x70, 0x84, 0x14, 0xb8, 0xb8, 0x53, 0x52, 0x8b, 0x93,
	0x8b, 0x32, 0x0b, 0x4a, 0x32, 0xf3, 0xf3, 0x24, 0x98, 0xc0, 0x72, 0xc8, 0x42, 0x4a, 0x2a, 0x5c,
	0xac, 0x20, 0xfd, 0xc5, 0x42, 0xd2, 0x40, 0x03, 0x40, 0x0c, 0xa0, 0x01, 0xcc, 0x1a, 0xdc, 0x46,
	0xac, 0x7a, 0x20, 0xe1, 0x20, 0x88, 0x98, 0x91, 0x3d, 0xd0, 0x16, 0xa0, 0xdd, 0x42, 0x92, 0x5c,
	0xec, 0x8e, 0x29, 0x29, 0x60, 0x0b, 0x21, 0x0a, 0xa4, 0x20, 0x94, 0x12, 0x83, 0x90, 0x0c, 0x17,
	0xa7, 0x4f, 0x66, 0x71, 0x09, 0xc4, 0x30, 0x56, 0x3d, 0x90, 0xe3, 0xa4, 0xd8, 0xc0, 0x92, 0xc5,
	0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x57, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x6f, 0x43, 0x5a,
	0x98, 0xc3, 0x00, 0x00, 0x00,
}
